{
    "name": "Erste Übung",
    "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.",
    "tasks": [
        {
            "id": 0,
            "type": 0,
            "name": "Aufgabe 1",
            "question": "Ziel dieser Aufgabe ist die Überprüfung Ihres Verständnisses zum Thema Verschlüsselung.<br/><b>Welche Nachteile bestehen im Zusammenhang mit der asymmetrischen Verschlüsselung?<br/><br/><small>Hinweis:<br/>Fahren Sie mit der Maus über die Antwort die Sie bewegen möchten, halten Sie die linke Maustaste gedrückt und schieben Sie die Antwort in den grünen Container.<br/> Für jede richtige Antwort erhalten Sie 1 Punkt, für jede falsche Antwort -0,5 Punkte</small>",
            "maxpoints": 2,
            "reqpoints": 1,
            "data": {
                "answers": [
                    "Sie ist vergleichsweise rechenaufwändig.",
                    "Man benötigt zusätzliche Maßnahmen gegen \"Man-in-the-Middle\"-Angriffe."
                ],
                "possibleAnswers": [
                    "Sie ist vergleichsweise rechenaufwändig.",
                    "Man benötigt zusätzliche Maßnahmen gegen \"Man-in-the-Middle\"-Angriffe.",
                    "Der zum Einsatz kommende Verschlsselungsalgorithmus ist zu unsicher.",
                    "Der geheime Schlüsselautausch ist gefährlich."
                ]
            }
        },
        {
            "id": 1,
            "type": 1,
            "name": "Aufgabe 2",
            "question": "Dem Andwender einer verteilten Anwendung sollte möglichst verborgen werden, aus welchen VA-Komponenten eine Anwendung aufgebaut ist und auf welchen VS-Knoten sich die einzelnen Komponenten befinden. Eine Anwendung, die diese Dtails verbirgt, wird als <i>transparent</i> bezeichnet.<br><b>Nennen Sie die ihnen bekannten Transparenzarten!</b>",
            "maxpoints": 6,
            "reqpoints": 3,
            "data": {
                "answers": [
                    "Zugriffstransparenz",
                    "Ortstransparenz",
                    "Migrationstransparenz",
                    "Replikationstransparenz",
                    "Nebenläufigkeitstransparenz",
                    "Fehlertransparenz"
                ]
            }
        },
        {
            "id": 2,
            "type": 1,
            "name": "Aufgabe 21111",
            "question": "Hier könnte ein Aufgabentext stehen",
            "maxpoints": 10,
            "reqpoints": 2,
            "data": {
                "answers": [
                    "Antwort A",
                    "Antwort B",
                    "Antwort C",
                    "Antwort D "
                ]
            }
        },
        {
            "id": 3,
            "type": 1,
            "name": "Früchteaufgabe",
            "question": "Hier könnte ein Aufgabentext stehen",
            "maxpoints": 5,
            "reqpoints": 2,
            "data": {
                "answers": [
                    "Banane",
                    "Apfel",
                    "Orange",
                    "Kiwi"
                ]
            }
        }, 
        {
            "id": 4,
            "type": 2,
            "name": "Socketprogrammierung",
            "question": "Nennen Sie alle Zeilen im Code, die einen blockierenden Aufruf verursachen.<br/>Tragen Sie die Zeilen als kommaseparierte Liste in das untenstehende Textfeld ein.<br/><br/><small>Für jede richtige Antwort erhalten Sie einen Punkt, für jede falsche Antwort einen Minuspunkt</small>",
            "maxpoints": 2,
            "reqpoints": 1,
            "data": {
                "code": "public class EchoClient {\n    public static void main(String[] args) {\n        try(Socket socket = new Socket(\"localhost\", 5555);\n            BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n            PrintWriter writer = new PrintWriter(socket.getOutputStream(), true)) {\n\n            Scanner scanner = new Scanner(System.in);\n            String input = scanner.nextLine();\n\n            writer.println(input);\n            System.out.println(reader.readLine());\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}",
                "correctLines": [8,11]
            }
        },
        {
            "id": 5,
            "type": 3,
            "name": "OrderDefHead",
            "question": "bla",
            "maxpoints": 5,
            "reqpoints": 2,
            "data": {
                "definitions": [
                    {"heading": "Performance", "definition": "Die Leistung der verteilten Anwendung (Antwortzeiten,Berechnungsdauer, etc) sollte durch die Verteilung der VA-Komponenten möglichst hoch sein und sollte auch gleichzeitige Anforderungen mehrerer Nutzer bearbeiten können (Nebenläufigkeit)."},
                    {"heading": "Skalierbarkeit", "definition": "Beschreibt bei einer Anwendung das Verhalten der Anwendung bzgl. des Ressourcenbedarfs bei wachsenden Eingabemengen. Diese Anforderung ist eine der wichtigsten und beschäftigt sich mit der Frage, inwieweit sich die Performance der verteilten Anwendung durch die Leistungssteigerung einzelner VA-Komponenten oder der Vervielfachung bzw. Erweiterung von VAKomponenten steigern lässt."},
                    {"heading": "Fehlertoleranz", "definition": "Die VA-Komponenten müssen so gestaltet sein, dass der Ausfall einer Komponente möglichst nicht zum Ausfall der gesamten Anwendung führt oder den Anwender wenigstens ausreichend über die Ursachen des Fehlers informiert."},
                    {"heading": "Sicherheit", "definition": "Die Verteilte Anwendung muss sicherstellen, dass die Kommunikation der VA-Komponenten in Bezug auf Vertraulichkeit, Authentizität und Integrität der übermittelten Daten sicher ist."},
                    {"heading": "Heterogene Systeme", "definition": "Die VA-Komponenten einer verteilten Anwendung sollen möglicht auch in heterogenen Systemen eingesetzt werden können, d.h. auf VS-Knoten mit unterschiedlicher Hardware, unterschiedlichen Betriebssystemen etc."}
                ]
            }
        }
    ]
}