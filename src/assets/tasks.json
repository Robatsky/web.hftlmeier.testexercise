{
    "name": "Verteilte Anwendungen - Grundlagen, Sockets und Multithreading",
    "description": "Das Gebiet der Verteilten Anwendungen gehört heute zu den wesentlichen Gebieten der angewandten Informatik. Mitunter findet man die Thematik in der Literatur auch unter der Bezeichnung verteilte Systeme, wobei in diesem Modul eine deutliche Trennung zwischen den klassischen verteilten Systemen und den verteilten Anwendungen gezogen wird, was man sich am Beispiel des World Wide Web verdeutlichen kann.<br/>Diese Übung soll dazu dienen, die hier im ersten Kapitel des Moduls behandelten Themen zu festigen und dem Studenten dabei helfen, Wissenslücken auswendig zu machen und zu beheben.<br/> Die Punkteverteilung ist bei jeder Aufgabe gleich. Für jede richtige Antwort bekommt der Studierende einen Punkt, für jede falche Antwort -0.5 Punkte. Man benötigt eine gewisse Anzahl an Punkten um die nächste Aufgaben machen zu müssen.",
    "tasks": [
        {
            "id": 0,
            "type": 1,
            "name": "HTTP-Operationen",
            "question": "Das Hypertext Transfer Protokoll (HTTP), das 1989 von Tim Berners-Lee am CERN entwickelt wurde, stellt eines der wichtigsten und am häufigsten verwendeten Anwendungsprotokolle im World Wide Web dar.  Ursprünglich wurde das Protokoll zur Übertragung von HTML-Seiten (Webseiten) zwischen Webbrowser und Webserver entwickelt. Aufgrund seiner Einfachheit wird das HTTP mittlerweile für eine ganze Reihe netzbasierter Anwendungen und Dienste verwendet.<br/><br/>Nennen Sie die 4 wichtigsten HTTP-Operationen.<br/><small>Leere Antworten sind <strong>nicht</strong> zulässig.</small>",
            "maxpoints": 4,
            "reqpoints": 2,
            "data": {
                "answers": [
                    "POST",
                    "PUT",
                    "GET",
                    "DELET"
                ]
            }
        },
        {
            "id": 1,
            "type": 0,
            "name": "HTTP-Nachrichten",
            "question": "Welche Möglichkeiten gibt es die Vollständigkeit einer empfangenen HTTP-Nachricht zu erkennen.<br/>Ziehen Sie die richtigen Antworten aus der roten in die grüne Box.",
            "maxpoints": 2,
            "reqpoints": 1,
            "data": {
                "answers": [
                    "Content-Length",
                    "Letzter Chunk hat eine größe von 0 Byte"
                ],
                "possibleAnswers": [
                    "Content-Length",
                    "Letzter Chunk hat eine größe von 0 Byte",
                    "Anhand des Statuscodes",
                    "Anhand der FrameCheckSequence"
                ]
            }
        },
        {
            "id": 2,
            "type": 2,
            "name": "AJAX",
            "question": "Durch den untenstehenden Code soll ein Request an einen Server gestellt werden. Es soll die Datei messages im XML-Format zurückgegeben werden.<br/>Welche Zeile(n) müssten am untenstehenden Code verändert werden um die Funktionalität zu gewährleisten.<br/>Tragen Sie die Zeilen als kommaseparierte Liste in das untenstehende Textfeld ein.<br/><br/><small>Für jede richtige Antwort erhalten Sie einen Punkt, für jede falsche Antwort einen Minuspunkt</small>",
            "maxpoints": 2,
            "reqpoints": 1,
            "data": {
                "code": "httpReq = new XMLHttpRequest();\nhttpReq.open('POST', 'http://127.0.0.1/messages', true);\nhttpReq.setRequestHeader('Accept', 'application/json');\nhttpReq.onreadystatechange = processResponse;\nhttpReq.send(null);",
                "correctLines": [
                    2,
                    3
                ]
            }
        }
    ]
}